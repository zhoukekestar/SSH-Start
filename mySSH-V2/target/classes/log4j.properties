#
# Log4J Settings for log4j 1.2.x (via jakarta-commons-logging)
#
# The five logging levels used by Log are (in order):
#
#   1. DEBUG (the least serious)
#   2. INFO
#   3. WARN
#   4. ERROR
#   5. FATAL (the most serious)

#####################################################################################
# Log4j提供的appender有以下几种：
# org.apache.log4j.ConsoleAppender（控制台），
# org.apache.log4j.FileAppender（文件），
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
# org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
#	可通过 log4j.appender.R.MaxFileSize=100KB设置文件大小，
#	还可通过 log4j.appender.R.MaxBackupIndex=1设置为保存一个备份文件。
# org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）

# 例如：log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#####################################################################################
# Log4j提供的layout有以下几种：
# org.apache.log4j.HTMLLayout（以HTML表格形式布局），
# org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
# org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
# org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
#####################################################################################
# 如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern，打印参数如下：
# %m 输出代码中指定的消息
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
# %r 输出自应用启动到输出该log信息耗费的毫秒数
# %c 输出所属的类目，通常就是所在类的全名
# %t 输出产生该日志事件的线程名
# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
# %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
# [QC]是log信息的开头，可以为任意字符，一般为项目简称。



log4j.rootLogger=INFO, stdout, file

# stdout---------------------------------------------------
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[mySSH] %d %5p (%c:%3L) - %m%n

# file-----------------------------------------------------
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.file.File=/Users/zhoukeke/Desktop/LOG4J
log4j.appender.S.DatePattern='-'yyyy-MM-dd'.log'
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[mySSH] %d %5p (%c:%3L) - %m%n

# special for class ---------------------------------------
log4j.logger.com.opensymphony.xwork2=ERROR
log4j.logger.org.apache.struts2=INFO
